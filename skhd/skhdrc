# disable MacOS default cmd - h
cmd - h : []

# Space Navigation (four spaces per display): cmd - {1, 2, 3, 4}
cmd - 1 : set -l SPACES (yabai -m query --displays --display | jq '.spaces[]') && [ -n $SPACES[1] ] && yabai -m space --focus $SPACES[1]
cmd - 2 : set -l SPACES (yabai -m query --displays --display | jq '.spaces[]') && [ -n $SPACES[2] ] && yabai -m space --focus $SPACES[2]
cmd - 3 : set -l SPACES (yabai -m query --displays --display | jq '.spaces[]') && [ -n $SPACES[3] ] && yabai -m space --focus $SPACES[3]
cmd - 4 : set -l SPACES (yabai -m query --displays --display | jq '.spaces[]') && [ -n $SPACES[4] ] && yabai -m space --focus $SPACES[4]

# Window Navigation (through display borders)
ctrl + lalt - h    : yabai -m window --focus west  || yabai -m display --focus west
ctrl + lalt - j    : yabai -m window --focus south || yabai -m display --focus south
ctrl + lalt - k    : yabai -m window --focus north || yabai -m display --focus north
ctrl + lalt - l    : yabai -m window --focus east  || yabai -m display --focus east

# cycle through all windows sorted by: coordinates -> space index -> display index
# ctrl + lalt - n : yabai -m window --focus "$(yabai -m query --windows | jq -re "sort_by(.display, .space, .frame.x, .frame.y, .id) | map(select(.\"is-visible\" == true and .role != \"AXUnknown\")) | reverse | nth(index(map(select(.\"has-focus\" == true))) - 1).id")"
# cycle through all visible windows sorted by: coordinates -> display index
# ctrl + lalt - m : yabai -m window --focus "$(yabai -m query --windows | jq -re "sort_by(.display, .frame.x, .frame.y, .id) | map(select(.\"is-visible\" == true and .role != \"AXUnknown\")) | reverse | nth(index(map(select(.\"has-focus\" == true))) - 1).id")"

# Float / Unfloat window: ctrl + lalt - space
ctrl + lalt - space : yabai -m window --toggle float

# Make window zoom to fullscreen: ctrl + lalt + enter
ctrl + lalt - 0x24 : yabai -m window --toggle zoom-fullscreen

# Make window zoom to parent node
ctrl + lalt + shift - 0x24 : yabai -m window --toggle zoom-parent

# Toggle split orientation of the selected windows node: ctrl + lalt - s
ctrl + lalt - s : yabai -m window --toggle split

# Moving windows in spaces
ctrl + shift + lalt - h : yabai -m window --warp west  \
                        || begin; yabai -m window --display west && yabai -m display --focus west && yabai -m window --warp last; end \
                        || yabai -m window --move rel:-10:0
ctrl + shift + lalt - j : yabai -m window --warp south \
                        || begin; yabai -m window --display south && yabai -m display --focus south; end \
                        || yabai -m window --move rel:0:10
ctrl + shift + lalt - k : yabai -m window --warp north \
                        || begin; yabai -m window --display north && yabai -m display --focus north; end \
                        || yabai -m window --move rel:0:-10
ctrl + shift + lalt - l : yabai -m window --warp east  \
                        || begin; yabai -m window --display east && yabai -m display --focus east && yabai -m window --warp first; end \
                        || yabai -m window --move rel:10:0

# Moving windows between spaces: shift + cmd - {1, 2, 3, 4, p, n } (Assumes 4 Spaces Max per Display)
shift + cmd - 1 : set -l SPACES (yabai -m query --displays --display | jq '.spaces[]') && [ -n $SPACES[1] ] \
                  && yabai -m window --space $SPACES[1]

shift + cmd - 2 : set -l SPACES (yabai -m query --displays --display | jq '.spaces[]') && [ -n $SPACES[2] ] \
                  && yabai -m window --space $SPACES[2]

shift + cmd - 3 : set -l SPACES (yabai -m query --displays --display | jq '.spaces[]') && [ -n $SPACES[3] ] \
                  && yabai -m window --space $SPACES[3]

shift + cmd - 4 : set -l SPACES (yabai -m query --displays --display | jq '.spaces[]') && [ -n $SPACES[4] ] \
                  && yabai -m window --space $SPACES[4]

# Mirror Space on X and Y Axis: shift + lalt - {-, |}
ctrl + lalt - 0x1B : yabai -m space --mirror x-axis # -
ctrl + lalt - 0x2A : yabai -m space --mirror y-axis # |

## Resize (ctrl + lalt - ...)
# Resize windows: ctrl + lalt - {<, >}
ctrl + lalt - 0x2B : yabai -m window --resize right:-100:0 || yabai -m window --resize left:-100:0
ctrl + lalt - 0x2F : yabai -m window --resize right:100:0 || yabai -m window --resize left:100:0

# Equalize size of windows: ctrl + lalt - e
ctrl + lalt - e : yabai -m space --balance

# Enable / Disable gaps in current workspace: ctrl + lalt - g
ctrl + lalt - g : yabai -m space --toggle padding; yabai -m space --toggle gap

# Toggle layout of the space (bsp, float)
ctrl + lalt - x : yabai -m space --layout "$(if [ $(yabai -m query --spaces --space | jq -r '.type') = 'bsp' ]; echo 'float'; else; echo 'bsp'; end)"

## Misc
# Open new kitty window
# lalt - t : kitty msg create-window

# New window in hor./ vert. splits for all applications with yabai
# lalt - s : yabai -m window --insert south;  skhd -k "cmd - n"
# lalt - v : yabai -m window --insert east; skhd -k "cmd - n"

# Toggle sketchybar
# ctrl + lalt - space : sketchybar --bar hidden=toggle
ctrl + lalt - r : sketchybar --remove '/.*/' && sh -c '$HOME/.config/sketchybar/sketchybarrc'
